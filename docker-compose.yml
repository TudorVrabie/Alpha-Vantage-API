version: '3.3'

services:
    app:
        build:
            context: ./
            dockerfile: Dockerfile
        volumes:
            - ./:/var/www
        networks:
            - test-api
        depends_on:
            - mysql
            - redis
    nginx:
        image: nginx:alpine
        ports:
            - '9000:80'
        volumes:
            - ./:/var/www
            - ./docker/configs/nginx/nginx.conf:/etc/nginx/nginx.conf
        networks:
            - test-api
        depends_on:
            - app
    mysql:
        image: 'mysql/mysql-server:8.0'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        ports:
            - '3396:3306'
        volumes:
            - 'test-api-mysql:/var/lib/mysql'
        networks:
            - test-api
    redis:
        image: 'redis:alpine'
        volumes:
            - 'test-api-redis:/data'
        networks:
            - test-api
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s
networks:
    test-api:
        driver: bridge
volumes:
    test-api-mysql:
        driver: local
    test-api-redis:
        driver: local
